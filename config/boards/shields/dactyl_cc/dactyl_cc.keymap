#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define MAC     1
#define LOWER   2
#define RAISE   3
#define ADJUST  4
#define FNKEYS  5

#define HYPER(key) LS(LC(LA(LG(key))))
#define MEH(key)   LS(LC(LA(key)))

&sl {
    release-after-ms = <5000>;
};


&kscan0 {
    debounce-press-ms = <30>;
    debounce-release-ms = <30>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp ESC    &kp N1    &kp N2    &kp N3       &kp N4    &kp N5     &kp N6                  &kp N7              &kp N8       &kp N9       &kp N0     &kp MINUS &kp PLUS  &kp BSPC
    &kp TAB    &kp Q     &kp W     &kp E        &kp R     &kp T      &kp LEFT_BRACKET        &kp RIGHT_BRACKET   &kp Y        &kp U        &kp I      &kp O     &kp P     &kp BACKSLASH
    &kp CAPS   &kp A     &kp S     &kp D        &kp F     &kp G      &kp H                   &kp RPAR            &kp H        &kp J        &kp K      &kp L     &kp SEMI  &kp SQT
    &kp LSHFT  &kp Z     &kp X     &kp C        &kp V     &kp B                                                  &kp N        &kp M        &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
    &kp LCTRL  &kp LCMD  &kp LALT  &bootloader  &kp SQT   &mo LOWER  &kp COLON               &mo FNKEYS          &mo RAISE    &mo LOWER    &kp DOWN   &kp GRAVE &kp LBKT  &kp RBKT
                                                &kp LCTRL &kp SPACE  &kp K_SLEEP             &kp C_SLEEP         &kp RET      &kp SPACE
            >;
        };

        mac_layer {
            bindings = <
    &kp ESC    &kp N1    &kp N2    &kp N3       &kp N4    &kp N5     &kp N6                  &kp N7              &kp N8       &kp N9       &kp N0     &kp MINUS &kp PLUS  &kp BSPC
    &kp TAB    &kp Q     &kp W     &kp E        &kp R     &kp T      &kp LEFT_BRACKET        &kp RIGHT_BRACKET   &kp Y        &kp U        &kp I      &kp O     &kp P     &kp BACKSLASH
    &kp CAPS   &kp A     &kp S     &kp D        &kp F     &kp G      &kp H                   &kp RPAR            &kp H        &kp J        &kp K      &kp L     &kp SEMI  &kp SQT
    &kp LSHFT  &kp Z     &kp X     &kp C        &kp V     &kp B                                                  &kp N        &kp M        &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
    &kp LCTRL  &kp LCMD  &kp LALT  &bootloader  &kp SQT   &mo LOWER  &kp COLON               &kp COLON           &mo RAISE    &out OUT_TOG &kp DOWN   &kp GRAVE &kp LBKT  &kp RBKT
                                                &kp LCTRL &kp SPACE  &kp K_SLEEP             &kp C_SLEEP         &kp RET      &kp SPACE
            >;
        };

        lower_layer {
            bindings = <
    &trans &trans &trans &trans &trans &trans &trans      &trans &trans    &trans    &trans    &trans     &trans  &trans
    &trans &trans &trans &trans &trans &trans &trans      &trans &trans    &trans    &trans    &trans     &trans  &trans
    &trans &trans &trans &trans &trans &trans &trans      &trans &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
    &trans &trans &trans &trans &trans &trans                    &trans    &trans    &trans    &trans     &trans  &trans
    &trans &trans &trans &trans &trans &trans &trans      &trans &trans    &trans    &trans    &trans     &trans  &trans
                                &trans &trans &trans      &trans &trans   &trans
            >;       };

        raise_layer {
            bindings = <
    &kp ESC    &kp N1    &kp N2    &kp N3       &kp N4    &kp N5     &kp N6                  &kp N7              &kp N8       &kp N9       &kp N0     &kp MINUS &kp PLUS  &kp BSPC
    &kp TAB    &kp Q     &kp W     &kp E        &kp R     &kp T      &kp LEFT_BRACKET        &kp RIGHT_BRACKET   &kp Y        &kp U        &kp I      &kp O     &kp P     &kp BACKSLASH
    &kp CAPS   &kp A     &kp S     &kp D        &kp F     &kp G      &kp H                   &kp RPAR            &kp H        &kp J        &kp K      &kp L     &kp SEMI  &kp SQT
    &kp LSHFT  &kp Z     &kp X     &kp C        &kp V     &kp B                                                  &kp N        &kp M        &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
    &kp LCTRL  &kp LCMD  &kp LALT  &bootloader  &kp SQT   &mo LOWER  &kp COLON               &kp COLON           &mo RAISE    &out OUT_TOG &kp DOWN   &kp GRAVE &kp LBKT  &kp RBKT
                                                &kp LCTRL &kp SPACE  &kp K_SLEEP             &kp C_SLEEP         &kp RET      &kp SPACE
            >;
        };

        adjust_layer {
            bindings = <
    &kp ESC    &kp N1    &kp N2    &kp N3       &kp N4    &kp N5     &kp N6                  &kp N7              &kp N8       &kp N9       &kp N0     &kp MINUS &kp PLUS  &kp BSPC
    &kp TAB    &kp Q     &kp W     &kp E        &kp R     &kp T      &kp LEFT_BRACKET        &kp RIGHT_BRACKET   &kp Y        &kp U        &kp I      &kp O     &kp P     &kp BACKSLASH
    &kp CAPS   &kp A     &kp S     &kp D        &kp F     &kp G      &kp H                   &kp RPAR            &kp H        &kp J        &kp K      &kp L     &kp SEMI  &kp SQT
    &kp LSHFT  &kp Z     &kp X     &kp C        &kp V     &kp B                                                  &kp N        &kp M        &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
    &kp LCTRL  &kp LCMD  &kp LALT  &bootloader  &kp SQT   &mo LOWER  &kp COLON               &kp COLON           &mo RAISE    &out OUT_TOG &kp DOWN   &kp GRAVE &kp LBKT  &kp RBKT
                                                &kp LCTRL &kp SPACE  &kp K_SLEEP             &kp C_SLEEP         &kp RET      &kp SPACE
            >;
        };

        fnkeys_layer {
            bindings = <
    &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6      &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL
    &trans &trans &trans &trans &trans &trans &trans      &trans &trans &trans &trans  &trans  &trans  &trans
    &trans &trans &trans &trans &trans &trans &trans      &trans &trans &trans &trans  &trans  &trans  &trans
    &trans &trans &trans &trans &trans &trans                    &trans &trans &trans  &trans  &trans  &trans
    &trans &trans &trans &trans &trans &trans &trans      &trans &trans &trans &trans  &trans  &trans  &trans
                                &trans &trans &trans      &trans &trans &trans
            >;
        };
    };
};
